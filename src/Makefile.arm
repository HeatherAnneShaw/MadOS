CC = arm-linux-gnueabi-gcc
AS = arm-linux-gnueabi-as
LD = arm-linux-gnueabi-ld
CFLAGS  = -static -nostartfiles -std=gnu99 -ffreestanding -Wall -Wextra -I../include -I./arm
OBJ	 = kernel boot.o kernel.o shell.o video.o madstd.o stdlib.o string.o stdio.o memory.o

all:
	# libk
	$(CC) $(CFLAGS) -c stdlib.c -o stdlib.o
	$(CC) $(CFLAGS) -c string.c -o string.o
	$(CC) $(CFLAGS) -c madstd.c -o madstd.o
	$(CC) $(CFLAGS) -c stdio.c -o stdio.o

	# kernel
	$(AS) -march=armv7-a -mcpu=cortex-a15 arm/boot.s -o boot.o
	$(CC) $(CFLAGS) -c kernel.c -o kernel.o
	$(CC) $(CFLAGS) -c memory.c -o memory.o

	# drivers
	$(CC) $(CFLAGS) -c arm/uart.c -o video.o

	# extra's
	$(CC) $(CFLAGS) -c extra/shell.c -o shell.o

	# link it all
	$(CC) -lgcc $(CFLAGS) -T arm/linker.ld -o $(OBJ)

test:
	qemu-system-arm -M vexpress-a15 -cpu cortex-a15 -kernel kernel -nographic

clean:
	rm *.o
	rm kernel
