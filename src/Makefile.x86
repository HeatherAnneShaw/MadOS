
CFLAGS = -m32 -nostartfiles -std=gnu99 -ffreestanding -O2 -Wall -Wextra -I../include -I./x86
OBJ	= kernel boot.o tables.o idt.o isr.o irq.o timer.o keyboard.o video.o port.o madstd.o stdlib.o string.o stdio.o kernel.o
EXTRA = shell.o latin-8.o latin-16.o c64-8.o c64-16.o

all:
	# libk
	gcc $(CFLAGS) -c stdlib.c -o stdlib.o
	gcc $(CFLAGS) -c string.c -o string.o
	gcc $(CFLAGS) -c madstd.c -o madstd.o
	gcc $(CFLAGS) -c stdio.c -o stdio.o
	
	# kernel
	nasm -f elf32 x86/boot.s -o boot.o
	
	# drivers
	nasm -f elf32 x86/tables.s -o tables.o
	gcc $(CFLAGS) -c x86/port.c -o port.o
	gcc $(CFLAGS) -c x86/vga.c -o video.o
	gcc $(CFLAGS) -c x86/keyboard.c -o keyboard.o
	gcc $(CFLAGS) -c x86/timer.c -o timer.o
	
	gcc $(CFLAGS) -c x86/idt.c -o idt.o
	gcc $(CFLAGS) -c x86/page.c -o page.o
	gcc $(CFLAGS) -c x86/isr.c -o isr.o
	gcc $(CFLAGS) -c x86/irq.c -o irq.o
	gcc $(CFLAGS) -c kernel.c -o kernel.o
	
	# extra
	gcc $(CFLAGS) -c extra/shell.c -o shell.o
	gcc $(CFLAGS) -c x86/fonts/latin-8.c -o latin-8.o
	gcc $(CFLAGS) -c x86/fonts/latin-16.c -o latin-16.o
	gcc $(CFLAGS) -c x86/fonts/c64-8.c -o c64-8.o
	gcc $(CFLAGS) -c x86/fonts/c64-16.c -o c64-16.o

	# link it on up
	gcc -T x86/linker.ld $(CFLAGS) -z max-page-size=0x1000 -o $(OBJ) $(EXTRA)

test:
	qemu-system-i386 -kernel kernel -append debug

clean:
	rm *.o
	rm kernel
